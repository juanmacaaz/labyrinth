#include "Labyrinth.h"


Labyrinth::Labyrinth(Space* space)
{
	this->space = space;
	generateMap();
}

void Labyrinth::generateMap()
{
	vector<vector<vector<int>>> zone = {
{{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}},
{{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,2},{2,2,2,2,2,2,2,2,2,0,2,2,0,0,2,2,2,2,0,2},{2,0,0,0,0,2,2,2,2,0,2,2,2,0,2,2,2,2,0,2},{2,0,2,2,0,2,2,2,2,0,0,0,0,0,0,2,2,2,0,2},{2,0,2,2,0,0,0,0,2,0,2,2,2,2,2,2,2,2,0,2},{2,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,0,2},{2,0,2,2,2,2,2,2,2,0,2,2,2,2,0,2,2,2,0,2},{2,0,0,0,0,0,0,0,0,0,2,2,2,2,0,2,2,2,0,2},{2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,2,2,2,0,2},{2,2,0,0,0,0,0,2,2,0,2,0,0,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,0,0,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,2,2,0,0,0,0,0,0,2},{2,2,0,0,0,0,0,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,0,0,0,0,2,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,2,2,2,2,0,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2},{2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,2}},
{{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,2},{2,2,2,2,2,2,2,2,2,0,2,2,0,0,2,2,2,2,0,2},{2,0,0,0,0,2,2,2,2,0,2,2,2,0,2,2,2,2,0,2},{2,0,2,2,0,2,2,2,2,0,0,0,0,0,0,2,2,2,0,2},{2,0,2,2,0,0,0,0,2,0,2,2,2,2,2,2,2,2,0,2},{2,0,2,0,0,2,2,2,2,0,0,0,0,0,0,2,2,2,0,2},{2,0,2,2,2,2,2,2,2,0,2,2,2,2,0,2,2,2,0,2},{2,0,0,0,0,0,0,0,0,0,2,2,2,2,0,2,2,2,0,2},{2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,2,2,2,0,2},{2,2,0,0,0,0,0,2,2,0,2,0,0,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,0,0,0,2,0,2,0,2,2,2,2,0,2},{2,2,0,2,2,2,0,2,2,0,2,2,2,0,0,0,0,0,0,2},{2,2,0,0,0,0,0,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,0,0,0,0,2,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,2,2,2,2,0,0,2,0,2,2,2,0,2,2,2,2,2,2},{2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2},{2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,2}} };

	float y = 0.0f;
	for (int m = 0; m < zone.size(); m++) {
		float z = 0.0f;
		for (int i = 0; i < zone[m].size(); i++) {
			float x = 0.0f;
			for (int j = 0; j < zone[m][i].size(); j++) {

				if (zone[m][i][j] != 0) {
					cubes.push_back(new Cube(space->getWorld(), space->getEngine()->getTextures()[zone[m][i][j]], space->getEngine()->getShaders()["basic-nolight"], Vector3(x, y, z), BodyType::STATIC));
				}
				x += 1.0f;
			}
			z += 1.0f;
		}
		y += 1.0f;
	}

}

void Labyrinth::render(Camera* camera)
{
	for (auto cube : cubes)
		cube->render(camera);
}
